// Generated by CoffeeScript 2.5.1
var COLORS, ballClicked, balls, clicked, createColors, draw, keyPressed, level, mousePressed, passive, pattern, radie, range, reset, setup;

balls = [];

radie = 100;

range = _.range;

//röd blå grön gul svart vit cyan magenta
//COLORS = "#f008 #00f8 #0f08 #ff08 #0008 #fff8 #0ff8 #f0f8".split " "
COLORS = [];

clicked = [];

level = 0;

ballClicked = 0;

passive = 0;

pattern = "0f";

createColors = function(s) {
  var b, g, j, k, l, len, len1, len2, r, result;
  pattern = s;
  result = [];
  for (j = 0, len = s.length; j < len; j++) {
    r = s[j];
    for (k = 0, len1 = s.length; k < len1; k++) {
      g = s[k];
      for (l = 0, len2 = s.length; l < len2; l++) {
        b = s[l];
        result.push("#" + r + g + b + "8");
      }
    }
  }
  return _.shuffle(result);
};

reset = function(delta) {
  var i, j, len, ref, results, x, y;
  //0123456789abcdef
  //COLORS = createColors	"cdef"
  console.log(delta);
  console.log(COLORS);
  level += delta;
  if (level === 0) {
    level = 1;
  }
  balls = [];
  clicked = [];
  passive = 0;
  ref = range(level);
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    x = int(random(width));
    y = int(random(height));
    balls.push({
      x: x,
      y: y,
      rgb: COLORS[i],
      passive: true
    });
    x = int(random(width));
    y = int(random(height));
    results.push(balls.push({
      x: x,
      y: y,
      rgb: COLORS[i],
      passive: true
    }));
  }
  return results;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  radie = windowHeight / 4;
  COLORS = createColors("0f");
  return reset(1);
};

draw = function() {
  var ball, j, len, results;
  background(255);
  fill(240);
  textSize(height / 5);
  textAlign(CENTER, CENTER);
  text(level, width / 2, height / 2);
  text(pattern, width / 2, 300);
  results = [];
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    if (ball.passive) {
      fill(ball.rgb);
      results.push(ellipse(ball.x, ball.y, radie * 2));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

keyPressed = function() {
  console.log(key, keyCode);
  if (key === "2") {
    COLORS = createColors("0f");
    reset(0);
  }
  if (key === "3") {
    COLORS = createColors("08f");
    reset(0);
  }
  if (key === "4") {
    COLORS = createColors("05af");
    reset(0);
  }
  if (key === "5") {
    COLORS = createColors("048bf");
    return reset(0);
  }
};

mousePressed = function() {
  var b, ball, j, len;
  console.log(mouseX, mouseY);
  ballClicked = 0;
//passive=0
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    if (dist(ball.x, ball.y, mouseX, mouseY) < radie && ball.passive === true) {
      ballClicked++;
      b = ball;
    }
  }
  if (ballClicked !== 1) {
    return reset(-1);
  }
  passive++;
  console.log("inside");
  clicked.push(b);
  console.log("clicked.length", clicked.length);
  b.passive = false;
  if (clicked.length !== 2) {
    return;
  }
  if (clicked[1].rgb !== clicked[0].rgb) {
    return reset(-1);
  } else {
    clicked = [];
  }
  if (passive === balls.length) {
    return reset(1);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLFdBQUEsRUFBQSxLQUFBLEVBQUEsT0FBQSxFQUFBLFlBQUEsRUFBQSxJQUFBLEVBQUEsVUFBQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFBQSxLQUFBLEdBQVE7O0FBQ1IsS0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUSxDQUFDLENBQUMsTUFGVjs7OztBQUtBLE1BQUEsR0FBUzs7QUFDVCxPQUFBLEdBQVE7O0FBQ1IsS0FBQSxHQUFNOztBQUNOLFdBQUEsR0FBYzs7QUFDZCxPQUFBLEdBQVU7O0FBQ1YsT0FBQSxHQUFVOztBQUVWLFlBQUEsR0FBZSxRQUFBLENBQUMsQ0FBRCxDQUFBO0FBQ2YsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsRUFBQTtFQUFDLE9BQUEsR0FBVTtFQUNWLE1BQUEsR0FBUztFQUNULEtBQUEsbUNBQUE7O0lBQ0MsS0FBQSxxQ0FBQTs7TUFDQyxLQUFBLHFDQUFBOztRQUNDLE1BQU0sQ0FBQyxJQUFQLENBQVksR0FBQSxHQUFJLENBQUosR0FBTSxDQUFOLEdBQVEsQ0FBUixHQUFVLEdBQXRCO01BREQ7SUFERDtFQUREO1NBSUEsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxNQUFWO0FBUGM7O0FBU2YsS0FBQSxHQUFRLFFBQUEsQ0FBQyxLQUFELENBQUE7QUFDUixNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxPQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUE7OztFQUVDLE9BQU8sQ0FBQyxHQUFSLENBQVksS0FB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Q0MsSUFBRyxJQUFBLENBQUssSUFBSSxDQUFDLENBQVYsRUFBWSxJQUFJLENBQUMsQ0FBakIsRUFBb0IsTUFBcEIsRUFBNEIsTUFBNUIsQ0FBQSxHQUFvQyxLQUFwQyxJQUE4QyxJQUFJLENBQUMsT0FBTCxLQUFjLElBQS9EO01BRUMsV0FBQTtNQUNBLENBQUEsR0FBRSxLQUhIOztFQUREO0VBS0EsSUFBRyxXQUFBLEtBQWEsQ0FBaEI7QUFBdUIsV0FBTyxLQUFBLENBQU0sQ0FBQyxDQUFQLEVBQTlCOztFQUNBLE9BQUE7RUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLFFBQVo7RUFDQSxPQUFPLENBQUMsSUFBUixDQUFhLENBQWI7RUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLGdCQUFaLEVBQTZCLE9BQU8sQ0FBQyxNQUFyQztFQUNBLENBQUMsQ0FBQyxPQUFGLEdBQVU7RUFDVixJQUFHLE9BQU8sQ0FBQyxNQUFSLEtBQWdCLENBQW5CO0FBQTBCLFdBQTFCOztFQUNBLElBQUcsT0FBTyxDQUFDLENBQUQsQ0FBRyxDQUFDLEdBQVgsS0FBZ0IsT0FBTyxDQUFDLENBQUQsQ0FBRyxDQUFDLEdBQTlCO0FBQXVDLFdBQU8sS0FBQSxDQUFNLENBQUMsQ0FBUCxFQUE5QztHQUFBLE1BQUE7SUFBNEQsT0FBQSxHQUFVLEdBQXRFOztFQUNBLElBQUcsT0FBQSxLQUFTLEtBQUssQ0FBQyxNQUFsQjtBQUE4QixXQUFPLEtBQUEsQ0FBTSxDQUFOLEVBQXJDOztBQWpCYyIsInNvdXJjZXNDb250ZW50IjpbImJhbGxzID0gW11cclxucmFkaWUgPSAxMDBcclxucmFuZ2UgPSBfLnJhbmdlXHJcbiNyw7ZkIGJsw6UgZ3LDtm4gZ3VsIHN2YXJ0IHZpdCBjeWFuIG1hZ2VudGFcclxuI0NPTE9SUyA9IFwiI2YwMDggIzAwZjggIzBmMDggI2ZmMDggIzAwMDggI2ZmZjggIzBmZjggI2YwZjhcIi5zcGxpdCBcIiBcIlxyXG5DT0xPUlMgPSBbXVxyXG5jbGlja2VkPVtdXHJcbmxldmVsPTBcclxuYmFsbENsaWNrZWQgPSAwXHJcbnBhc3NpdmUgPSAwXHJcbnBhdHRlcm4gPSBcIjBmXCJcclxuXHJcbmNyZWF0ZUNvbG9ycyA9IChzKS0+XHJcblx0cGF0dGVybiA9IHNcclxuXHRyZXN1bHQgPSBbXVxyXG5cdGZvciByIGluIHNcclxuXHRcdGZvciBnIGluIHNcclxuXHRcdFx0Zm9yIGIgaW4gc1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoIFwiI1wiK3IrZytiK1wiOFwiXHJcblx0Xy5zaHVmZmxlIHJlc3VsdFxyXG5cclxucmVzZXQgPSAoZGVsdGEpLT5cclxuIzAxMjM0NTY3ODlhYmNkZWZcclxuXHQjQ09MT1JTID0gY3JlYXRlQ29sb3JzXHRcImNkZWZcIlxyXG5cdGNvbnNvbGUubG9nIGRlbHRhXHJcblx0Y29uc29sZS5sb2cgQ09MT1JTIFxyXG5cdGxldmVsKz1kZWx0YVxyXG5cdGlmIGxldmVsPT0wIHRoZW4gbGV2ZWw9MVxyXG5cdGJhbGxzID0gW11cclxuXHRjbGlja2VkID0gW11cclxuXHRwYXNzaXZlID0gMFxyXG5cdGZvciBpIGluIHJhbmdlIGxldmVsXHJcblx0XHR4ID0gaW50IHJhbmRvbSB3aWR0aFxyXG5cdFx0eSA9IGludCByYW5kb20gaGVpZ2h0XHJcblx0XHRiYWxscy5wdXNoIHt4OngseTp5LHJnYjpDT0xPUlNbaV0scGFzc2l2ZTp0cnVlfVxyXG5cdFx0eCA9IGludCByYW5kb20gd2lkdGhcclxuXHRcdHkgPSBpbnQgcmFuZG9tIGhlaWdodFxyXG5cdFx0YmFsbHMucHVzaCB7eDp4LHk6eSxyZ2I6Q09MT1JTW2ldLHBhc3NpdmU6dHJ1ZX1cclxuXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIHdpbmRvd1dpZHRoLCB3aW5kb3dIZWlnaHRcclxuXHRyYWRpZSA9IHdpbmRvd0hlaWdodC80XHJcblx0Q09MT1JTPWNyZWF0ZUNvbG9ycyBcIjBmXCJcclxuXHRyZXNldCAxXHJcblxyXG5cclxuZHJhdyA9IC0+XHJcblx0YmFja2dyb3VuZCAyNTVcclxuXHRmaWxsIDI0MFxyXG5cdHRleHRTaXplIGhlaWdodC81XHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHR0ZXh0IGxldmVsLHdpZHRoLzIsaGVpZ2h0LzJcclxuXHR0ZXh0IHBhdHRlcm4sd2lkdGgvMiwzMDBcclxuXHRmb3IgYmFsbCBpbiBiYWxsc1xyXG5cdFx0aWYgYmFsbC5wYXNzaXZlXHJcblx0XHRcdGZpbGwgYmFsbC5yZ2IgXHJcblx0XHRcdGVsbGlwc2UgYmFsbC54LGJhbGwueSxyYWRpZSoyXHJcblxyXG5cclxua2V5UHJlc3NlZCA9IC0+XHJcblx0Y29uc29sZS5sb2cga2V5LCBrZXlDb2RlXHJcblx0aWYga2V5PT1cIjJcIiBcclxuXHRcdENPTE9SUz1jcmVhdGVDb2xvcnMgXCIwZlwiXHJcblx0XHRyZXNldCAwXHJcblx0aWYga2V5PT1cIjNcIiBcclxuXHRcdENPTE9SUz1jcmVhdGVDb2xvcnMgXCIwOGZcIlxyXG5cdFx0cmVzZXQgMFxyXG5cdGlmIGtleT09XCI0XCIgXHJcblx0XHRDT0xPUlM9Y3JlYXRlQ29sb3JzIFwiMDVhZlwiXHJcblx0XHRyZXNldCAwXHJcblx0aWYga2V5PT1cIjVcIiBcclxuXHRcdENPTE9SUz1jcmVhdGVDb2xvcnMgXCIwNDhiZlwiXHJcblx0XHRyZXNldCAwXHJcblxyXG5cclxuXHJcblxyXG5cclxubW91c2VQcmVzc2VkID0gLT5cclxuXHRjb25zb2xlLmxvZyBtb3VzZVgsIG1vdXNlWVxyXG5cdGJhbGxDbGlja2VkPTBcclxuXHQjcGFzc2l2ZT0wXHJcblx0Zm9yIGJhbGwgaW4gYmFsbHMgXHJcblx0XHRpZiBkaXN0KGJhbGwueCxiYWxsLnksIG1vdXNlWCwgbW91c2VZKTxyYWRpZSBhbmQgYmFsbC5wYXNzaXZlPT10cnVlXHJcblxyXG5cdFx0XHRiYWxsQ2xpY2tlZCsrXHJcblx0XHRcdGI9YmFsbFxyXG5cdGlmIGJhbGxDbGlja2VkIT0xIHRoZW4gcmV0dXJuIHJlc2V0IC0xXHJcblx0cGFzc2l2ZSsrXHJcblx0Y29uc29sZS5sb2cgXCJpbnNpZGVcIlxyXG5cdGNsaWNrZWQucHVzaCBiIFxyXG5cdGNvbnNvbGUubG9nIFwiY2xpY2tlZC5sZW5ndGhcIixjbGlja2VkLmxlbmd0aFxyXG5cdGIucGFzc2l2ZT1mYWxzZVxyXG5cdGlmIGNsaWNrZWQubGVuZ3RoIT0yIHRoZW4gcmV0dXJuXHJcblx0aWYgY2xpY2tlZFsxXS5yZ2IhPWNsaWNrZWRbMF0ucmdiIHRoZW4gcmV0dXJuIHJlc2V0IC0xIGVsc2UgY2xpY2tlZCA9IFtdXHJcblx0aWYgcGFzc2l2ZT09YmFsbHMubGVuZ3RoIHRoZW4gcmV0dXJuIHJlc2V0IDEiXX0=
//# sourceURL=c:\github\colorpair\coffee\sketch.coffee