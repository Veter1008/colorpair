// Generated by CoffeeScript 2.5.1
var COLORS, balls, clicked, draw, level, mousePressed, radie, range, reset, setup;

balls = [];

radie = 100;

range = _.range;

COLORS = "#f008 #00f8 #0f08 #ff08".split(" ");

clicked = [];

level = 0;

reset = function(delta) {
  var i, j, len, ref, results, x, y;
  console.log(delta);
  level += delta;
  if (level === 0) {
    level = 1;
  }
  balls = [];
  clicked = [];
  ref = range(level);
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    x = int(random(width));
    y = int(random(height));
    balls.push({
      x: x,
      y: y,
      rgb: COLORS[i],
      active: true
    });
    x = int(random(width));
    y = int(random(height));
    results.push(balls.push({
      x: x,
      y: y,
      rgb: COLORS[i],
      active: true
    }));
  }
  return results;
};

setup = function() {
  createCanvas(windowWidth, windowHeight);
  radie = windowHeight / 4;
  return reset(1);
};

draw = function() {
  var ball, j, len, results;
  background(255);
  results = [];
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    if (ball.active) {
      fill(ball.rgb);
      ellipse(ball.x, ball.y, radie * 2);
      fill(0);
      textSize(radie / 5);
      textAlign(CENTER, CENTER);
      results.push(text(`${ball.x} ${ball.y}\n${ball.rgb}\n${ball.active}`, ball.x, ball.y));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

mousePressed = function() {
  var active, b, ball, ballCount, j, len;
  console.log(mouseX, mouseY);
  ballCount = 0;
  active = 0;
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    if (dist(ball.x, ball.y, mouseX, mouseY) < radie && ball.active === true) {
      active++;
      ballCount++;
      b = ball;
    }
  }
  if (ballCount === 1) {
    console.log("inside");
    clicked.push(b);
    console.log(clicked.length);
    b.active = false;
    if (clicked.length === 1) {
      if (b.rgb === clicked[0].rgb) {
        if (active === balls.length) {
          return reset(1);
        }
      } else {
        return reset(-1);
      }
    } else {
      return reset(-1);
    }
  } else {
    return reset(-1);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsTUFBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxZQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsS0FBQSxHQUFROztBQUNSLEtBQUEsR0FBUTs7QUFDUixLQUFBLEdBQVEsQ0FBQyxDQUFDOztBQUNWLE1BQUEsR0FBUyx5QkFBeUIsQ0FBQyxLQUExQixDQUFnQyxHQUFoQzs7QUFDVCxPQUFBLEdBQVE7O0FBQ1IsS0FBQSxHQUFNOztBQUdOLEtBQUEsR0FBUSxRQUFBLENBQUMsS0FBRCxDQUFBO0FBQ1IsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLENBQUEsRUFBQTtFQUFDLE9BQU8sQ0FBQyxHQUFSLENBQVksS0FBWjtFQUNBLEtBQUEsSUFBTztFQUNQLElBQUcsS0FBQSxLQUFPLENBQVY7SUFBaUIsS0FBQSxHQUFNLEVBQXZCOztFQUNBLEtBQUEsR0FBUTtFQUNSLE9BQUEsR0FBVTtBQUNWO0FBQUE7RUFBQSxLQUFBLHFDQUFBOztJQUNDLENBQUEsR0FBSSxHQUFBLENBQUksTUFBQSxDQUFPLEtBQVAsQ0FBSjtJQUNKLENBQUEsR0FBSSxHQUFBLENBQUksTUFBQSxDQUFPLE1BQVAsQ0FBSjtJQUNKLEtBQUssQ0FBQyxJQUFOLENBQVc7TUFBQyxDQUFBLEVBQUUsQ0FBSDtNQUFLLENBQUEsRUFBRSxDQUFQO01BQVMsR0FBQSxFQUFJLE1BQU0sQ0FBQyxDQUFELENBQW5CO01BQXVCLE1BQUEsRUFBTztJQUE5QixDQUFYO0lBQ0EsQ0FBQSxHQUFJLEdBQUEsQ0FBSSxNQUFBLENBQU8sS0FBUCxDQUFKO0lBQ0osQ0FBQSxHQUFJLEdBQUEsQ0FBSSxNQUFBLENBQU8sTUFBUCxDQUFKO2lCQUNKLEtBQUssQ0FBQyxJQUFOLENBQVc7TUFBQyxDQUFBLEVBQUUsQ0FBSDtNQUFLLENBQUEsRUFBRSxDQUFQO01BQVMsR0FBQSxFQUFJLE1BQU0sQ0FBQyxDQUFELENBQW5CO01BQXVCLE1BQUEsRUFBTztJQUE5QixDQUFYO0VBTkQsQ0FBQTs7QUFOTzs7QUFlUixLQUFBLEdBQVEsUUFBQSxDQUFBLENBQUE7RUFDUCxZQUFBLENBQWEsV0FBYixFQUEwQixZQUExQjtFQUNBLEtBQUEsR0FBUSxZQUFBLEdBQWE7U0FDckIsS0FBQSxDQUFNLENBQU47QUFITzs7QUFNUixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7QUFDUCxNQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUMsVUFBQSxDQUFXLEdBQVg7QUFDQTtFQUFBLEtBQUEsdUNBQUE7O0lBQ0MsSUFBRyxJQUFJLENBQUMsTUFBUjtNQUNDLElBQUEsQ0FBSyxJQUFJLENBQUMsR0FBVjtNQUNBLE9BQUEsQ0FBUSxJQUFJLENBQUMsQ0FBYixFQUFlLElBQUksQ0FBQyxDQUFwQixFQUFzQixLQUFBLEdBQU0sQ0FBNUI7TUFDQSxJQUFBLENBQUssQ0FBTDtNQUNBLFFBQUEsQ0FBUyxLQUFBLEdBQU0sQ0FBZjtNQUNBLFNBQUEsQ0FBVSxNQUFWLEVBQWlCLE1BQWpCO21CQUNBLElBQUEsQ0FBSyxDQUFBLENBQUEsQ0FBRyxJQUFJLENBQUMsQ0FBUixFQUFBLENBQUEsQ0FBYSxJQUFJLENBQUMsQ0FBbEIsQ0FBQSxFQUFBLENBQUEsQ0FBd0IsSUFBSSxDQUFDLEdBQTdCLENBQUEsRUFBQSxDQUFBLENBQXFDLElBQUksQ0FBQyxNQUExQyxDQUFBLENBQUwsRUFBd0QsSUFBSSxDQUFDLENBQTdELEVBQStELElBQUksQ0FBQyxDQUFwRSxHQU5EO0tBQUEsTUFBQTsyQkFBQTs7RUFERCxDQUFBOztBQUZNOztBQVlQLFlBQUEsR0FBZSxRQUFBLENBQUEsQ0FBQTtBQUNmLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsU0FBQSxFQUFBLENBQUEsRUFBQTtFQUFDLE9BQU8sQ0FBQyxHQUFSLENBQVksTUFBWixFQUFvQixNQUFwQjtFQUNBLFNBQUEsR0FBVTtFQUNWLE1BQUEsR0FBTztFQUNQLEtBQUEsdUNBQUE7O0lBQ0MsSUFBRyxJQUFBLENBQUssSUFBSSxDQUFDLENBQVYsRUFBWSxJQUFJLENBQUMsQ0FBakIsRUFBb0IsTUFBcEIsRUFBNEIsTUFBNUIsQ0FBQSxHQUFvQyxLQUFwQyxJQUE4QyxJQUFJLENBQUMsTUFBTCxLQUFhLElBQTlEO01BQ0MsTUFBQTtNQUNBLFNBQUE7TUFDQSxDQUFBLEdBQUUsS0FISDs7RUFERDtFQUtBLElBQUcsU0FBQSxLQUFXLENBQWQ7SUFDQyxPQUFPLENBQUMsR0FBUixDQUFZLFFBQVo7SUFDQSxPQUFPLENBQUMsSUFBUixDQUFhLENBQWI7SUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLE9BQU8sQ0FBQyxNQUFwQjtJQUNBLENBQUMsQ0FBQyxNQUFGLEdBQVM7SUFDVCxJQUFHLE9BQU8sQ0FBQyxNQUFSLEtBQWdCLENBQW5CO01BQ0MsSUFBRyxDQUFDLENBQUMsR0FBRixLQUFPLE9BQU8sQ0FBQyxDQUFELENBQUcsQ0FBQyxHQUFyQjtRQUNDLElBQUcsTUFBQSxLQUFRLEtBQUssQ0FBQyxNQUFqQjtpQkFDQyxLQUFBLENBQU0sQ0FBTixFQUREO1NBREQ7T0FBQSxNQUFBO2VBSUMsS0FBQSxDQUFNLENBQUMsQ0FBUCxFQUpEO09BREQ7S0FBQSxNQUFBO2FBT0MsS0FBQSxDQUFNLENBQUMsQ0FBUCxFQVBEO0tBTEQ7R0FBQSxNQUFBO1dBY0MsS0FBQSxDQUFNLENBQUMsQ0FBUCxFQWREOztBQVRjIiwic291cmNlc0NvbnRlbnQiOlsiYmFsbHMgPSBbXVxyXG5yYWRpZSA9IDEwMFxyXG5yYW5nZSA9IF8ucmFuZ2VcclxuQ09MT1JTID0gXCIjZjAwOCAjMDBmOCAjMGYwOCAjZmYwOFwiLnNwbGl0IFwiIFwiIFxyXG5jbGlja2VkPVtdXHJcbmxldmVsPTBcclxuXHJcblxyXG5yZXNldCA9IChkZWx0YSktPlxyXG5cdGNvbnNvbGUubG9nIGRlbHRhXHJcblx0bGV2ZWwrPWRlbHRhXHJcblx0aWYgbGV2ZWw9PTAgdGhlbiBsZXZlbD0xXHJcblx0YmFsbHMgPSBbXVxyXG5cdGNsaWNrZWQgPSBbXVxyXG5cdGZvciBpIGluIHJhbmdlIGxldmVsXHJcblx0XHR4ID0gaW50IHJhbmRvbSB3aWR0aFxyXG5cdFx0eSA9IGludCByYW5kb20gaGVpZ2h0XHJcblx0XHRiYWxscy5wdXNoIHt4OngseTp5LHJnYjpDT0xPUlNbaV0sYWN0aXZlOnRydWV9XHJcblx0XHR4ID0gaW50IHJhbmRvbSB3aWR0aFxyXG5cdFx0eSA9IGludCByYW5kb20gaGVpZ2h0XHJcblx0XHRiYWxscy5wdXNoIHt4OngseTp5LHJnYjpDT0xPUlNbaV0sYWN0aXZlOnRydWV9XHJcblxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyB3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0XHJcblx0cmFkaWUgPSB3aW5kb3dIZWlnaHQvNFxyXG5cdHJlc2V0IDFcclxuXHJcblxyXG5kcmF3ID0gLT5cclxuXHRiYWNrZ3JvdW5kIDI1NVxyXG5cdGZvciBiYWxsIGluIGJhbGxzXHJcblx0XHRpZiBiYWxsLmFjdGl2ZVxyXG5cdFx0XHRmaWxsIGJhbGwucmdiIFxyXG5cdFx0XHRlbGxpcHNlIGJhbGwueCxiYWxsLnkscmFkaWUqMlxyXG5cdFx0XHRmaWxsIDBcclxuXHRcdFx0dGV4dFNpemUgcmFkaWUvNVxyXG5cdFx0XHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdFx0XHR0ZXh0IFwiI3tiYWxsLnh9ICN7YmFsbC55fVxcbiN7YmFsbC5yZ2J9XFxuI3tiYWxsLmFjdGl2ZX1cIixiYWxsLngsYmFsbC55XHJcblxyXG5cclxubW91c2VQcmVzc2VkID0gLT5cclxuXHRjb25zb2xlLmxvZyBtb3VzZVgsIG1vdXNlWVxyXG5cdGJhbGxDb3VudD0wXHJcblx0YWN0aXZlPTBcclxuXHRmb3IgYmFsbCBpbiBiYWxscyBcclxuXHRcdGlmIGRpc3QoYmFsbC54LGJhbGwueSwgbW91c2VYLCBtb3VzZVkpPHJhZGllIGFuZCBiYWxsLmFjdGl2ZT09dHJ1ZVxyXG5cdFx0XHRhY3RpdmUrK1xyXG5cdFx0XHRiYWxsQ291bnQrK1xyXG5cdFx0XHRiPWJhbGxcclxuXHRpZiBiYWxsQ291bnQ9PTFcclxuXHRcdGNvbnNvbGUubG9nIFwiaW5zaWRlXCJcclxuXHRcdGNsaWNrZWQucHVzaCBiIFxyXG5cdFx0Y29uc29sZS5sb2cgY2xpY2tlZC5sZW5ndGhcclxuXHRcdGIuYWN0aXZlPWZhbHNlXHJcblx0XHRpZiBjbGlja2VkLmxlbmd0aD09MVxyXG5cdFx0XHRpZiBiLnJnYj09Y2xpY2tlZFswXS5yZ2JcclxuXHRcdFx0XHRpZiBhY3RpdmU9PWJhbGxzLmxlbmd0aFxyXG5cdFx0XHRcdFx0cmVzZXQgMVxyXG5cdFx0XHRlbHNlIFxyXG5cdFx0XHRcdHJlc2V0IC0xXHJcblx0XHRlbHNlIFxyXG5cdFx0XHRyZXNldCAtMVxyXG5cdGVsc2UgXHJcblx0XHRyZXNldCAtMSJdfQ==
//# sourceURL=c:\github\colorpair\coffee\sketch.coffee